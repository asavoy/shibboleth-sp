<!--
	Dynamically generated by Chef on <%= node["fqdn"] %>
	Local modifications will be overwritten by Chef.
-->
<SPConfig xmlns="urn:mace:shibboleth:2.0:native:sp:config" xmlns:md="urn:oasis:names:tc:SAML:2.0:metadata"
    clockSkew="1800">

    <!-- The ApplicationDefaults element is where most of Shibboleth's SAML bits are defined. -->
    <ApplicationDefaults entityID="<%= node['shibboleth-sp']['entityID'] %>"
        REMOTE_USER="<%= node['shibboleth-sp']['REMOTE_USER'] %>">

        <!--
		Controls session lifetimes, address checks, cookie handling, and the protocol handlers.
		You MUST supply an effectively unique handlerURL value for each of your applications.
		The value defaults to /Shibboleth.sso, and should be a relative path, with the SP computing
		a relative value based on the virtual host. Using handlerSSL="true", the default, will force
		the protocol to be https. You should also set cookieProps to "https" for SSL-only sites.
		Note that while we default checkAddress to "false", this has a negative impact on the
		security of your site. Stealing sessions via cookie theft is much easier with this disabled.
		-->
        <Sessions lifetime="<%= node['shibboleth-sp']['Sessions']['lifetime'] %>" timeout="<%= node['shibboleth-sp']['Sessions']['timeout'] %>" relayState="<%= node['shibboleth-sp']['Sessions']['relayState'] %>"
				  checkAddress="<%= node['shibboleth-sp']['Sessions']['checkAddress'] %>" handlerSSL="<%= node['shibboleth-sp']['Sessions']['handlerSSL'] %>" cookieProps="<%= node['shibboleth-sp']['Sessions']['cookieProps'] %>">

			<!--
			Configures SSO for a default IdP. To allow for >1 IdP, remove
			entityID property and adjust discoveryURL to point to discovery service.
			(Set discoveryProtocol to "WAYF" for legacy Shibboleth WAYF support.)
			You can also override entityID on /Login query string, or in RequestMap/htaccess.
			-->
			<% if node['shibboleth-sp']['SSO']['discoveryURL'].empty? -%>
			<SSO entityID="<%= node['shibboleth-sp']['SSO']['entityID'] %>">
			<% else -%>
			<SSO discoveryProtocol="<%= node['shibboleth-sp']['SSO']['discoveryProtocol'] %>" discoveryURL="<%= node['shibboleth-sp']['SSO']['discoveryURL'] %>">
			<% end -%>
			  SAML2 SAML1
			</SSO>

            <!-- SAML and local-only logout. -->
            <!-- https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPServiceLogout -->
            <Logout>SAML2 Local</Logout>

            <!--
                Handlers allow you to interact with the SP and gather more information.  Try them out!
                Attribute values received by the SP through SAML will be visible at:
                http://staging-shib.mathspace.co/Shibboleth.sso/Session
            -->

            <!-- Extension service that generates "approximate" metadata based on SP configuration. -->
			<% if node['shibboleth-sp']['Handler']['MetadataGenerator']['childElements'] -%>
			<Handler type="MetadataGenerator" Location="/Metadata" signing="false">
				<%= node['shibboleth-sp']['Handler']['MetadataGenerator']['childElements'] %>
			</Handler>
			<% else -%>
			<Handler type="MetadataGenerator" Location="/Metadata" signing="false"/>
			<% end -%>

			<!-- Status reporting service. -->
			<Handler type="Status" Location="/Status"
			<% if !node['shibboleth-sp']['Handler']['Status']['acl'].empty? -%>
				acl="<%= node['shibboleth-sp']['Handler']['Status']['acl'] %>"
			<% end -%>
			/>

            <!-- Session diagnostic service. -->
            <Handler type="Session" Location="/Session" showAttributeValues="true"/>

            <!-- JSON feed of discovery information. -->
            <Handler type="DiscoveryFeed" Location="/DiscoFeed"/>

        </Sessions>

        <!--
		Allows overriding of error template information/filenames. You can
		also add attributes with values that can be plugged into the templates.
		-->
		<Errors supportContact="<%= node['shibboleth-sp']['Errors']['supportContact'] %>"
			helpLocation="<%= node['shibboleth-sp']['Errors']['helpLocation'] %>"
			styleSheet="<%= node['shibboleth-sp']['Errors']['styleSheet'] %>"
			logoLocation="<%= node['shibboleth-sp']['Errors']['logoLocation'] %>" />

		<!-- Example of remotely supplied batch of signed metadata. -->
		<!--
		<MetadataProvider type="XML" uri="http://federation.org/federation-metadata.xml"
			  backingFilePath="federation-metadata.xml" reloadInterval="7200">
			<MetadataFilter type="RequireValidUntil" maxValidityInterval="2419200"/>
			<MetadataFilter type="Signature" certificate="fedsigner.pem"/>
		</MetadataProvider>
		-->

		<!-- Example of locally maintained metadata. -->
		<!--
		<MetadataProvider type="XML" file="partner-metadata.xml"/>
		-->

        <% node['shibboleth-sp']['MetadataProviders'].each do |provider| -%>
        <MetadataProvider
            type="<%= provider['type'] %>"
            url="<%= provider['url'] %>"
            backingFilePath="<%= provider['backingFilePath'] %>"
            reloadInterval="<%= provider['reloadInterval'] %>"
        />
        <% end -%>

		<!-- Map to extract attributes from SAML assertions. -->
		<AttributeExtractor type="XML" validate="true" reloadChanges="false" path="attribute-map.xml"/>


		<!-- Use a SAML query if no attributes are supplied during SSO. -->
		<% unless node['shibboleth-sp']['saml-query'] -%><!--<% end -%>
		<AttributeResolver type="Query" subjectMatch="true"/>
		<% unless node['shibboleth-sp']['saml-query'] -%>--><% end -%>

		<!-- Default filtering policy for recognized attributes, lets other data pass. -->
		<AttributeFilter type="XML" validate="true" path="attribute-policy.xml"/>

		<!-- Simple file-based resolver for using a single keypair. -->
		<CredentialResolver type="File" key="sp-key.pem" certificate="sp-cert.pem"/>

    </ApplicationDefaults>

    <!-- Security policies you shouldn't change unless you know what you're doing. -->
    <SecurityPolicyProvider type="XML" validate="true" path="security-policy.xml"/>

    <!-- Low-level configuration about protocols and bindings available for use. -->
    <ProtocolProvider type="XML" validate="true" reloadChanges="false" path="protocols.xml"/>

</SPConfig>
